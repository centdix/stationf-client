{"remainingRequest":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/farhad/Desktop/stationf/client/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/farhad/Desktop/stationf/client/src/App.vue","mtime":1611238915931},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIGNvbG9yOiAjMmMzZTUwOwogIG1hcmdpbi10b3A6IDMwcHg7Cn0KLnRwIHsKICBmbGV4OiAwIDAgMjUlOwogIG1heC13aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <h1 class=\"text-center\">Book a meeting room</h1>\n    <div id=\"date_search\">\n      <h3 class=\"text-center m-4\">Search by date and time</h3>\n      <div class=\"row mt-4 justify-content-center\">\n        <label class=\"col-3\">When: </label>\n        <input type=\"date\" id=\"date\" class=\"col-4\" v-model=\"date\">\n        <vue-timepicker :minute-interval=\"10\" v-model=\"time\" class=\"tp\"></vue-timepicker>\n      </div>\n      <div class=\"row mt-4 justify-content-center\">\n        <label class=\"col-3\">Duration: </label>\n        <vue-timepicker\n          :hour-range=\"[0, 1, 2, 3, 4, 5]\"\n          :minute-interval=\"30\"\n          v-model=\"duration\"\n          class=\"tp\">    \n        </vue-timepicker>\n        <button @click=\"date_search\" class=\"btn-secondary col-2 offset-md-2\">Search</button>\n      </div>\n    </div>\n    <RoomsList :start_date=\"start_date\" :end_date=\"end_date\"\n      :available_rooms=\"available_rooms\" @book=\"date_search\"></RoomsList>\n    <hr>\n    <BookingsList :bookings=\"bookings\" @deleteBooking=\"getBookings\"></BookingsList>\n  </div>\n</template>\n\n<script>\n  import VueTimepicker from 'vue2-timepicker';\n  import 'vue2-timepicker/dist/VueTimepicker.css';\n  import moment from 'moment';\n  import RoomsList from './components/RoomsList';\n  import BookingsList from './components/BookingsList';\n\n  export default {\n    name: 'App',\n    components: {\n      VueTimepicker,\n      RoomsList,\n      BookingsList\n    },\n    data() {\n      return {\n        date: \"\",\n        time: \"\",\n        duration: \"\",\n        available_rooms: [],\n        rooms: [],\n        bookings: [],\n      }\n    },\n    async mounted() {\n      await this.getRooms();\n      await this.getBookings();\n    },\n    methods: {\n      findByName(arr, name) {\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i].name === name)\n            return i;\n        }\n        return -1;\n      },\n      async getRooms() {\n        let url = process.env.VUE_APP_API_URL;\n        let response = await fetch(url + 'rooms', { method: 'get' });\n        let data = await response.json();\n        this.rooms = data.rooms;\n      },\n      async getBookings() {\n        let url = process.env.VUE_APP_API_URL;\n        let response = await fetch(url + 'bookings', { method: 'get' })\n        let data = await response.json();\n        this.bookings = data;\n      },\n      async date_search() {\n        let start_value = this.start_date;\n        let end_value = this.end_date;\n        if (start_value === null || end_value === null || start_value.isBefore(new moment()) || start_value.isSame(end_value)) {\n          this.$toasted.error('Invalid or incomplete inputs').goAway(1500);\n          return ;\n        }\n        let available = [...this.rooms];\n        let url = process.env.VUE_APP_API_URL;\n        let response = await fetch(url + 'bookings', { method: 'get' })\n        let data = await response.json();\n        this.bookings = data;\n        this.bookings.forEach((b) => {\n          let start = moment(b.start_date).subtract(1, 'minutes');\n          let end = moment(b.end_date).add(1, 'minutes');\n          if (start_value.isBetween(start, end) || end_value.isBetween(start, end))\n          {\n            let i = this.findByName(available, b.room_name);\n            available.splice(i, 1);\n          }\n        })\n        this.available_rooms = available; \n      },\n    },\n    computed: {\n      start_date() {\n        let time = this.time.split(':');\n        let start_date = null;\n        if (this.date.length > 0 && time.length > 1)\n          start_date = new moment(this.date).hours(time[0]).minutes(time[1]);\n        return start_date;\n      },\n      end_date() {\n        let duration = this.duration.split(':');\n        let end_date = null;\n        if (this.start_date != null && duration.length > 1) {\n          end_date = this.start_date.clone();\n          end_date.add(parseInt(duration[0], 10), 'hours');\n          end_date.add(parseInt(duration[1], 10), 'minutes');\n        }\n        return end_date;\n      }\n    }\n  }\n</script>\n\n<style>\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: #2c3e50;\n    margin-top: 30px;\n  }\n  .tp {\n    flex: 0 0 25%;\n    max-width: 100%;\n  }\n</style>\n"]}]}