{"remainingRequest":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/farhad/Desktop/stationf/client/src/components/RoomsList.vue?vue&type=style&index=0&id=3c529e94&scoped=true&lang=css&","dependencies":[{"path":"/Users/farhad/Desktop/stationf/client/src/components/RoomsList.vue","mtime":1611302920725},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/css-loader/dist/cjs.js","mtime":1611239831734},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1611239836810},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/postcss-loader/src/index.js","mtime":1611239834575},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/cache-loader/dist/cjs.js","mtime":1611239831161},{"path":"/Users/farhad/Desktop/stationf/client/node_modules/vue-loader/lib/index.js","mtime":1611239836809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmlucHV0IHsKICBtYXJnaW46IDEwcHg7Cn0K"},{"version":3,"sources":["RoomsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA","file":"RoomsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"results\" class=\"m-4\">\n    <div class=\"row ml-1\">\n      <h5>Rooms available from {{ start_date | moment(\"MMMM DD, HH:mm\") }} to {{ end_date | moment(\"MMMM DD, HH:mm\") }} :</h5>\n    </div>\n    <div class=\"row mt-3\">\n      <div class=\"col\">\n        <span>Minimum capacity: {{ min_cap }}</span>\n      </div>\n    </div>\n    <div class=\"row pl-3\">\n      <div class=\"col\">\n        <input type=\"range\" class=\"form-control-range\" id=\"formControlRange\" min=\"0\" max=\"50\" v-model=\"min_cap\">\n      </div>\n      <div class=\"col\">\n        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"tv_selected\" id=\"tv\">\n        <label class=\"form-check-label\" for=\"tv\">TV</label>\n      </div>\n      <div class=\"col\">\n        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"retro_selected\" id=\"retro\">\n        <label class=\"form-check-label\" for=\"retro\">Retro Projecteur</label>\n      </div>  \n    </div>\n    <div class=\"card mt-1\" v-for=\"room in filteredRooms\" :key=\"room.id\">\n      <h5 class=\"card-header text-center\">\n        {{ room.name }}\n      </h5>\n      <div class=\"card-body\">\n        <div class=\"row m-2 justify-content-center\">\n          <div class=\"col-4\">\n            Capacity: {{ room.capacity }}\n          </div>\n          <div class=\"col-4\">\n            <span v-if=\"room.equipements.length > 0\">Equipments: </span>\n            <span v-else>No equipments</span>\n            <br>\n            <span v-for=\"e in room.equipements\" :key=\"e.id\" class=\"ml-3\">\n              {{ e.name }}\n            </span>\n          </div>\n        </div>\n        <div class=\"row justify-content-end m-3\">\n          <button class=\"btn btn-primary col-3\" @click=\"book(room)\">Book</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'RoomsList',\n    props: [\n      'start_date',\n      'end_date',\n      'available_rooms'\n    ],\n    data() {\n      return {\n        min_cap: 0,\n        tv_selected: false,\n        retro_selected: false,\n      }\n    },\n    methods: {\n      async book(room) {\n        let booking = {\n          room_name: room.name,\n          start_date: this.start_date,\n          end_date: this.end_date,\n        };\n        let url = process.env.VUE_APP_API_URL\n        let res = await fetch(url + 'book', {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify(booking),\n        });\n        this.$emit('book');\n        if (res.status === 200)\n          this.$toasted.success('Room booked !').goAway(1500);\n        else\n          this.$toasted.error('Something went wrong...').goAway(1500);\n      },\n    },\n    computed: {\n      filteredRooms() {\n        let results = [...this.available_rooms];\n        results = results.filter((r) => {\n          if (r.capacity < this.min_cap)\n            return false;\n          let has_tv = false;\n          let has_retro = false;\n          for (let i = 0; i < r.equipements.length; i++) {\n            if (r.equipements[i].name === \"TV\")\n              has_tv = true;\n            if (r.equipements[i].name === \"Retro Projecteur\")\n              has_retro = true;\n          }\n          if ((this.tv_selected && !has_tv) || this.retro_selected && !has_retro)\n            return false;\n          return true;\n        })\n        return results;\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  input {\n    margin: 10px;\n  }\n</style>\n"]}]}